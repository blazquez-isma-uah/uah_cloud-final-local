spring.application.name=peliculas-servicio-cliente
server.port=8000
# CONFIGURACION DEL CHARSET PARA HTTP
server.servlet.encoding.enabled=true
server.servlet.encoding.charset=UTF-8
spring.http.encoding.force-response=true

# CONFIGURACION MULTIPART (SUBIDA DE ARCHIVOS)
# Habilitamos subida de archivos
spring.servlet.multipart.enabled=true
# Directorio temporal para subir archivos (Windows)
spring.servlet.multipart.location=c:/temp
# Maximo tama√±o de archivos que se pueden subir
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Habilitar logs org.slf4j
logging.level.es.uah.ismael.fbm=DEBUG


# URL de los servicios REST para Kubernetes
api.peliculas.peliculas.url=http://peliculas-backend.default.svc.cluster.local:8001/peliculas
api.peliculas.actores.url=http://peliculas-backend.default.svc.cluster.local:8001/actores
api.usuarios.criticas.url=http://usuarios-backend.default.svc.cluster.local:8002/criticas
api.usuarios.roles.url=http://usuarios-backend.default.svc.cluster.local:8002/roles
api.usuarios.usuarios.url=http://usuarios-backend.default.svc.cluster.local:8002/usuarios
api.password.generator.url=http://password-generator-backend.default.svc.cluster.local:8004/password

# URL de los servicios REST para docker-compose en local
# api.peliculas.peliculas.url=http://peliculas.local/peliculas
# api.peliculas.actores.url=http://peliculas.local/actores
# api.usuarios.criticas.url=http://usuarios.local/criticas
# api.usuarios.roles.url=http://usuarios.local/roles
# api.usuarios.usuarios.url=http://usuarios.local/usuarios
# api.password.generator.url=http://passwordgen.local/password